openapi: 3.0.0
servers:
  - url: http://localhost:8080/v1
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/jlgula/Polaris/1.0.0
info:
  version: 1.0.0
  title: Polaris
  description: Microgrid controller
  contact:
    email: jlgula@papugh.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: device
    description: Devices managed by the controller
  - name: subscription
    description: Subscriptions that implement subscribe/notify
  - name: GC
    description: Operations the affect the grid controller as a whole.
paths:
  /gc/reset:
    post:
      tags:
        - GC
      summary: Resets the GC
      description: Removes all content and resets the GC.
      operationId: reset
      x-scala-package: gc
      responses:
        "201":
          description: Reset successful
          content:
            text/plain:
              schema:
                type: string
  /gc/dateTime:
    get:
      tags:
        - GC
      summary: Gets the current date and time
      description: |
        A subscribable value that changes with the current date and time.
      operationId: getDateTime
      x-scala-package: gc
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                format: date-time
    put:
      tags:
        - device
      summary: Sets the device properties
      description: |
        Sets the current date and time
      operationId: putDateTime
      x-scala-package: gc
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              format: date-time
      responses:
        "204":
          description: Update successful. No content returned.
        "400":
          description: Invalid request. The content provides additional details.
          content:
            text/plain:
              schema:
                type: string
  /gc/powerPrice:
    get:
      tags:
        - GC
      summary: Gets the current price for power
      description: |
        A subscribable value of the price for power in dollars/kWh (arbitrary).
      operationId: getPrice
      x-scala-package: gc
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: number
    put:
      tags:
        - device
      summary: Sets the current price for power
      description: |
        Sets the value of the price for power in dollars/kWh (arbitrary).
      operationId: putPrice
      x-scala-package: gc
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: number
      responses:
        "204":
          description: Update successful. No content returned.
        "400":
          description: Invalid request. The content provides additional details.
          content:
            text/plain:
              schema:
                type: string
  /devices:
    get:
      tags:
        - device
      summary: Lists devices
      description: Gets a list of all known devices
      operationId: listDevices
      x-scala-package: device
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
    post:
      tags:
        - device
      summary: Adds a device
      description: Adds a new device to the list of all known device
      operationId: addDevice
      x-scala-package: device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Device"
      responses:
        "201":
          description: Device successfully added. The content is the ID of the added device.
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request
          content:
            text/plain:
              schema:
                type: string
  /devices/{id}:
    get:
      tags:
        - device
      summary: Gets the device properties
      description: |
        Gets the properties of the device as an entity.
      operationId: getDevice
      x-scala-package: device
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Get successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device"
        "404":
          description: Not found - the id does not corresponed to a registered device
          content:
            text/plain:
              schema:
                type: string
    put:
      tags:
        - device
      summary: Sets the device properties
      description: |
        Sets the properties of the device as an entity.
      operationId: putDevice
      x-scala-package: device
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Device"
      responses:
        "204":
          description: Update successful. No content returned.
        "400":
          description: Invalid request. The content provides additional details.
          content:
            text/plain:
              schema:
                type: string
        "404":
          description: Not found. The id does not corresponed to a registered device
          content:
            text/plain:
              schema:
                type: string
    delete:
      tags:
        - device
      summary: Deletes the device
      description: |
        Removes the device from the table of devices known to the controller.
      operationId: deleteDevice
      x-scala-package: device
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        "204":
          description: Delete successful. There is no content in the result.
        "404":
          description: Not found. The id does not corresponed to a known device.
          content:
            text/plain:
              schema:
                type: string

  /devices/{id}/powerGranted:
    get:
      tags:
        - device
      summary: Gets the power granted to the device
      description: |
        A device observes this value to know how much of its requested power
        has been granted by the microgrid for it to consume.
      operationId: getPowerGranted
      x-scala-package: device
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Get successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PowerValue"
        "404":
          description: Not found - the id does not corresponed to a registered device
          content:
            text/plain:
              schema:
                type: string
    put:
      tags:
        - device
      operationId: putPowerGranted
      summary: Sets the power granted to the device
      description: |
        The grid controller sets this value to let the device know how much of its requested power
        has been granted by the microgrid for it to consume.
      x-scala-package: device
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PowerValue"
      responses:
        "204":
          description: Update successful, no content returned
        "400":
          description: Invalid request
          content:
            text/plain:
              schema:
                type: string
        "404":
          description: Not found - the id does not corresponed to a known device
          content:
            text/plain:
              schema:
                type: string
  /devices/{id}/powerAccepted:
    get:
      tags:
        - device
      summary: Gets the power that the microgrid has accepted
      description: |
        A power sourcing device observes this value to know how much of
        the power that it offered to the microgrid
        has been accepted by the microgrid.
      operationId: getPowerAccepted
      x-scala-package: device
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Get successful
          content:
            application/json:
              schema:
                type: number
        "404":
          description: Not found - the id does not corresponed to a registered device
          content:
            text/plain:
              schema:
                type: string
    put:
      tags:
        - device
      operationId: putPowerAccepted
      summary: Sets the power accepted by the microgrid
      description: |
        The grid controller sets this value to let the device know how much of its offered power
        has been accepted by the microgrid.
      x-scala-package: device
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: number
      responses:
        "204":
          description: Update successful, no content returned
        "400":
          description: Invalid request
          content:
            text/plain:
              schema:
                type: string
        "404":
          description: Not found - the id does not corresponed to a known device
          content:
            text/plain:
              schema:
                type: string
  /subscriptions:
    get:
      tags:
        - subscription
      summary: Lists subscriptions
      description: Gets a list of all subscriptions
      operationId: listSubscriptions
      x-scala-package: subscription
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
    post:
      tags:
        - subscription
      summary: Adds a subscription
      description: Adds a new subscription
      operationId: addSubscription
      x-scala-package: subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subscription"
      responses:
        "201":
          description: Subscription successfully added. The content is the ID of the subscription.
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Invalid request
          content:
            text/plain:
              schema:
                type: string
  /subscriptions/{id}:
    delete:
      tags:
        - subscription
      operationId: deleteSubscription
      x-scala-package: subscription
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        "204":
          description: Delete successful. There is no content in the result.
        "404":
          description: Not found - the id does not corresponed to an existing subscription
          content:
            text/plain:
              schema:
                type: string

components:
  schemas:
    Device:
      type: object
      required:
        - name
        - id
      properties:
        id:
          type: string
        name:
          type: string
        powerRequested:
          type: number
          description: the power in whats that the device needs to perform its primary function
        powerOffered:
          type: number
          description: the power in watts that the device has available to supply the microgrid
        powerPrice:
          type: number
          description: |
            The price at which the device is willing to buy or sell power. Can be used as a priority.
    PowerValue:
      description: power in watts accepted, granted or consumed
      type: number
    Subscription:
      type: object
      required:
        - observedURL
        - observerURL
      properties:
        observedURL:
          description: the URL of the resource that is being observed
          type: string
        observerURL:
          description: the URL on the client that will receive notifications
          type: string

